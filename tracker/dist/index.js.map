{"version":3,"sources":["../src/browser-interaction-time.ts","../node_modules/lodash/isObject.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/now.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/debounce.js","../node_modules/lodash/throttle.js","config.ts","time_counter.ts","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","../node_modules/js-cookie/dist/js.cookie.js","util.ts","events.ts","index.ts"],"names":["global","freeGlobal","root","Symbol","objectProto","nativeObjectToString","symToStringTag","getRawTag","objectToString","isObjectLike","baseGetTag","isSymbol","isObject","now","toNumber","FUNC_ERROR_TEXT","debounce","throttle","urlAlphabet","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","size","getRandom","mask","Math","log","length","LN2","step","id","j","customAlphabet","nanoid","byte","toString","toUpperCase","factory","exports","module","define","amd","self","current","Cookies","noConflict","assign","target","i","arguments","source","key","api","init","converter","defaultAttributes","set","value","attributes","document","expires","Date","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","Object","create","get","cookies","jar","parts","slice","join","foundKey","read","e","remove","withAttributes","withConverter","freeze","path"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["import throttle from 'lodash/throttle'\n\ninterface BaseTimeEllapsedCallbackData {\n  callback: (timeInMs: number) => void\n  timeInMilliseconds: number\n}\n\ntype BasicCallback = (timeInMs: number) => void\n\nexport interface TimeIntervalEllapsedCallbackData\n  extends BaseTimeEllapsedCallbackData {\n  multiplier: (time: number) => number\n}\n\nexport interface AbsoluteTimeEllapsedCallbackData\n  extends BaseTimeEllapsedCallbackData {\n  pending: boolean\n}\n\ninterface Settings {\n  timeIntervalEllapsedCallbacks?: TimeIntervalEllapsedCallbackData[]\n  absoluteTimeEllapsedCallbacks?: AbsoluteTimeEllapsedCallbackData[]\n  browserTabInactiveCallbacks?: BasicCallback[]\n  browserTabActiveCallbacks?: BasicCallback[]\n  idleCallbacks?: BasicCallback[]\n  activeCallbacks?: BasicCallback[]\n  idleTimeoutMs?: number\n  stopTimerOnTabchange?: boolean\n  checkCallbacksIntervalMs?: number\n}\ninterface Times {\n  start: number\n  stop: number | null\n}\n\ninterface Mark {\n  time: number\n}\n\ninterface Marks {\n  [key: string]: Mark[]\n}\n\ninterface Measure {\n  name: string\n  startTime: number\n  duration: number\n}\n\ninterface Measures {\n  [key: string]: Measure[]\n}\nconst windowIdleEvents = ['scroll', 'resize']\nconst documentIdleEvents = [\n  'wheel',\n  'keydown',\n  'keyup',\n  'mousedown',\n  'mousemove',\n  'touchstart',\n  'touchmove',\n  'click',\n  'contextmenu',\n]\n\nexport default class BrowserInteractionTime {\n  private running: boolean\n  private times: Times[]\n  private idle: boolean\n  private checkCallbackIntervalId?: number\n  private currentIdleTimeMs: number\n\n  private idleTimeoutMs: number\n  private checkCallbacksIntervalMs: number\n  private stopTimerOnTabchange: boolean\n  private browserTabActiveCallbacks: BasicCallback[]\n  private browserTabInactiveCallbacks: BasicCallback[]\n  private idleCallbacks: BasicCallback[]\n  private activeCallbacks: BasicCallback[]\n  private timeIntervalEllapsedCallbacks: TimeIntervalEllapsedCallbackData[]\n  private absoluteTimeEllapsedCallbacks: AbsoluteTimeEllapsedCallbackData[]\n  private marks: Marks\n  private measures: Measures\n\n  constructor({\n    timeIntervalEllapsedCallbacks = [],\n    absoluteTimeEllapsedCallbacks = [],\n    checkCallbacksIntervalMs = 100,\n    browserTabInactiveCallbacks = [],\n    idleCallbacks = [],\n    stopTimerOnTabchange = true,\n    activeCallbacks = [],\n    browserTabActiveCallbacks = [],\n    idleTimeoutMs = 3000,\n  }: Settings) {\n    this.running = false\n    this.times = []\n    this.idle = false\n    this.currentIdleTimeMs = 0\n    this.marks = {}\n    this.measures = {}\n    this.stopTimerOnTabchange = stopTimerOnTabchange\n    this.browserTabActiveCallbacks = browserTabActiveCallbacks\n    this.browserTabInactiveCallbacks = browserTabInactiveCallbacks\n    this.checkCallbacksIntervalMs = checkCallbacksIntervalMs\n    this.idleTimeoutMs = idleTimeoutMs\n    this.timeIntervalEllapsedCallbacks = timeIntervalEllapsedCallbacks\n    this.absoluteTimeEllapsedCallbacks = absoluteTimeEllapsedCallbacks\n    this.idleCallbacks = idleCallbacks\n    this.activeCallbacks = activeCallbacks\n\n    this.registerEventListeners()\n  }\n\n  private onBrowserTabInactive = (event: Event) => {\n    // if running pause timer\n    if (this.isRunning() && this.stopTimerOnTabchange) {\n      this.stopTimer()\n    }\n\n    this.browserTabInactiveCallbacks.forEach((fn) =>\n      fn(this.getTimeInMilliseconds())\n    )\n  }\n\n  private onBrowserTabActive = (event: Event) => {\n    // if not running start timer\n    if (!this.isRunning()) {\n      this.startTimer()\n    }\n\n    this.browserTabActiveCallbacks.forEach((fn) =>\n      fn(this.getTimeInMilliseconds())\n    )\n  }\n\n  private onTimePassed = () => {\n    // check all callbacks time and if passed execute callback\n    this.absoluteTimeEllapsedCallbacks.forEach(\n      ({ callback, pending, timeInMilliseconds }, index) => {\n        if (pending && timeInMilliseconds <= this.getTimeInMilliseconds()) {\n          callback(this.getTimeInMilliseconds())\n          this.absoluteTimeEllapsedCallbacks[index].pending = false\n        }\n      }\n    )\n\n    this.timeIntervalEllapsedCallbacks.forEach(\n      ({ callback, timeInMilliseconds, multiplier }, index) => {\n        if (timeInMilliseconds <= this.getTimeInMilliseconds()) {\n          callback(this.getTimeInMilliseconds())\n          this.timeIntervalEllapsedCallbacks[\n            index\n          ].timeInMilliseconds = multiplier(timeInMilliseconds)\n        }\n      }\n    )\n\n    if (this.currentIdleTimeMs >= this.idleTimeoutMs && this.isRunning()) {\n      this.idle = true\n      this.stopTimer()\n      this.idleCallbacks.forEach((fn) => fn(this.getTimeInMilliseconds()))\n    } else {\n      this.currentIdleTimeMs += this.checkCallbacksIntervalMs\n    }\n  }\n\n  private resetIdleTime = () => {\n    if (this.idle) {\n      this.startTimer()\n    }\n    this.activeCallbacks.forEach((fn) => fn(this.getTimeInMilliseconds()))\n    this.idle = false\n    this.currentIdleTimeMs = 0\n  }\n\n  private registerEventListeners = () => {\n    const documentListenerOptions = { passive: true }\n    const windowListenerOptions = { ...documentListenerOptions, capture: true }\n\n    window.addEventListener(\n      'blur',\n      this.onBrowserTabInactive,\n      windowListenerOptions\n    )\n    window.addEventListener(\n      'focus',\n      this.onBrowserTabActive,\n      windowListenerOptions\n    )\n\n    const throttleResetIdleTime = throttle(this.resetIdleTime, 2000, {\n      leading: true,\n      trailing: false,\n    })\n    windowIdleEvents.forEach((event) => {\n      window.addEventListener(\n        event,\n        throttleResetIdleTime,\n        windowListenerOptions\n      )\n    })\n\n    documentIdleEvents.forEach((event) =>\n      document.addEventListener(\n        event,\n        throttleResetIdleTime,\n        documentListenerOptions\n      )\n    )\n  }\n\n  private unregisterEventListeners = () => {\n    window.removeEventListener('blur', this.onBrowserTabInactive)\n    window.removeEventListener('focus', this.onBrowserTabActive)\n    windowIdleEvents.forEach((event) =>\n      window.removeEventListener(event, this.resetIdleTime)\n    )\n\n    documentIdleEvents.forEach((event) =>\n      document.removeEventListener(event, this.resetIdleTime)\n    )\n  }\n\n  private checkCallbacksOnInterval = () => {\n    this.checkCallbackIntervalId = window.setInterval(() => {\n      this.onTimePassed()\n    }, this.checkCallbacksIntervalMs)\n  }\n\n  public startTimer = () => {\n    if (!this.checkCallbackIntervalId) {\n      this.checkCallbacksOnInterval()\n    }\n    const last = this.times[this.times.length - 1]\n    if (last && last.stop === null) {\n      return\n    }\n    this.times.push({\n      start: performance.now(),\n      stop: null,\n    })\n    this.running = true\n  }\n\n  public stopTimer = () => {\n    if (!this.times.length) {\n      return\n    }\n    this.times[this.times.length - 1].stop = performance.now()\n    this.running = false\n  }\n\n  public addTimeIntervalEllapsedCallback = (\n    timeIntervalEllapsedCallback: TimeIntervalEllapsedCallbackData\n  ) => {\n    this.timeIntervalEllapsedCallbacks.push(timeIntervalEllapsedCallback)\n  }\n\n  public addAbsoluteTimeEllapsedCallback = (\n    absoluteTimeEllapsedCallback: AbsoluteTimeEllapsedCallbackData\n  ) => {\n    this.absoluteTimeEllapsedCallbacks.push(absoluteTimeEllapsedCallback)\n  }\n\n  public addBrowserTabInactiveCallback = (\n    browserTabInactiveCallback: BasicCallback\n  ) => {\n    this.browserTabInactiveCallbacks.push(browserTabInactiveCallback)\n  }\n\n  public addBrowserTabActiveCallback = (\n    browserTabActiveCallback: BasicCallback\n  ) => {\n    this.browserTabActiveCallbacks.push(browserTabActiveCallback)\n  }\n\n  public addIdleCallback = (inactiveCallback: BasicCallback) => {\n    this.idleCallbacks.push(inactiveCallback)\n  }\n\n  public addActiveCallback = (activeCallback: BasicCallback) => {\n    this.activeCallbacks.push(activeCallback)\n  }\n\n  public getTimeInMilliseconds = (): number => {\n    return this.times.reduce((acc, current) => {\n      if (current.stop) {\n        acc = acc + (current.stop - current.start)\n      } else {\n        acc = acc + (performance.now() - current.start)\n      }\n      return acc\n    }, 0)\n  }\n\n  public isRunning = () => {\n    return this.running\n  }\n\n  public isIdle = () => {\n    return this.idle\n  }\n\n  public reset = () => {\n    this.times = []\n  }\n\n  public destroy = () => {\n    this.unregisterEventListeners()\n    if (this.checkCallbackIntervalId) {\n      window.clearInterval(this.checkCallbackIntervalId)\n    }\n  }\n\n  public mark(key: string) {\n    if (!this.marks[key]) {\n      this.marks[key] = []\n    }\n    this.marks[key].push({ time: this.getTimeInMilliseconds() })\n  }\n\n  public getMarks(name: string) {\n    if (this.marks[name].length < 1) {\n      return\n    }\n\n    return this.marks[name]\n  }\n\n  public measure(name: string, startMarkName: string, endMarkName: string) {\n    const startMarks = this.marks[startMarkName]\n    const startMark = startMarks[startMarks.length - 1]\n    const endMarks = this.marks[endMarkName]\n    const endMark = endMarks[endMarks.length - 1]\n\n    if (!this.measures[name]) {\n      this.measures[name] = []\n    }\n\n    this.measures[name].push({\n      name,\n      startTime: startMark.time,\n      duration: endMark.time - startMark.time,\n    })\n  }\n\n  public getMeasures(name: string) {\n    if (!this.measures[name] && this.measures[name].length < 1) {\n      return\n    }\n\n    return this.measures[name]\n  }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","import { configuration } from \"./types\";\r\n\r\nconst script_params = document.currentScript;\r\nconst idle_time = Number(script_params?.getAttribute('idle-time') || 0);\r\nconst website_id = script_params?.getAttribute('website-id') || '';\r\nconst analytics_endpoint = script_params?.getAttribute('analytics-endpoint') || 'http://localhost:8000';\r\nconst use_cookie = Boolean(script_params?.getAttribute('use-cookie') || false);\r\n\r\nconst Config: configuration = {\r\n    idle_time,\r\n    website_id,\r\n    analytics_endpoint,\r\n    use_cookie,\r\n};\r\n\r\nexport {\r\n    Config,\r\n};","import BrowserInteractionTime from 'browser-interaction-time';\r\nimport { Config } from './config';\r\n\r\n// time_counter global variable to share states across various functions.\r\nlet time_counter: BrowserInteractionTime;\r\n\r\n// Start counter and being to record time.\r\nconst StartTimer = () => {\r\n\r\n    time_counter = new BrowserInteractionTime({\r\n        idleTimeoutMs: Config.idle_time * 1000,\r\n    });\r\n\r\n    time_counter.startTimer();\r\n    \r\n};\r\n\r\n\r\n// GetTimePassed gives time passed since page is loaded.\r\nconst GetTimePassed = (): number => {\r\n\r\n    return time_counter.getTimeInMilliseconds() / 1000;\r\n\r\n};\r\n\r\n// Resets timer.\r\nconst ResetTimer = () => {\r\n    time_counter.reset();\r\n};\r\n\r\nexport {\r\n    StartTimer,\r\n    GetTimePassed,\r\n    ResetTimer,\r\n};","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","/*! js-cookie v3.0.1 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  }()));\n}(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (key, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      key = encodeURIComponent(key)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        key + '=' + converter.write(value, key) + stringifiedAttributes)\n    }\n\n    function get (key) {\n      if (typeof document === 'undefined' || (arguments.length && !key)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var foundKey = decodeURIComponent(parts[0]);\n          jar[foundKey] = converter.read(value, foundKey);\n\n          if (key === foundKey) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return key ? jar[key] : jar\n    }\n\n    return Object.create(\n      {\n        set: set,\n        get: get,\n        remove: function (key, attributes) {\n          set(\n            key,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n})));\n","import { nanoid } from 'nanoid';\r\nimport Cookies from 'js-cookie';\r\nimport { Config } from './config';\r\n\r\nlet PAGE_SCROLL = 0;\r\n\r\n// Gets session and creates if it doesn't exists.\r\nconst GetCurrentSession = () => {\r\n\r\n    // Creating and setting session ID and returning it.\r\n    const new_session_id = nanoid();\r\n\r\n    // Checking is website owner wants to use cookie.\r\n    if (Config.use_cookie) {\r\n\r\n        // Getting session id from a cookie.\r\n        const session_id = Cookies.get('session_id');\r\n        if (session_id) {\r\n            return session_id;\r\n        };\r\n\r\n        // Saving session id to a cookie\r\n        // with one year expiration time.\r\n        Cookies.set('session_id', new_session_id, {\r\n            expires: 365 * 24 * 60 * 60,\r\n            path: \"/\",\r\n        });\r\n\r\n        // Returning new session id.\r\n        return new_session_id;\r\n\r\n    };\r\n\r\n\r\n    // Getting and returning session ID if it exists from session store.\r\n    const session_id = sessionStorage.getItem('session_id');\r\n    if (session_id) {\r\n        return session_id\r\n    };\r\n\r\n    // Setting and returning new session_id in session store.\r\n    sessionStorage.setItem('session_id', new_session_id);\r\n    return new_session_id;\r\n\r\n};\r\n\r\n\r\n// To Obtain UTM Params\r\nconst GetUTMParams = () => {\r\n\r\n    // Getting all url parameters.\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n\r\n    // Getting UTM parameters from all parameters.\r\n    const utm_params = {\r\n        utm_source: urlParams.get('utm_source'),\r\n        utm_medium: urlParams.get('utm_medium'),\r\n        utm_campaign: urlParams.get('utm_campaign'),\r\n    };\r\n\r\n    return utm_params;\r\n\r\n};\r\n\r\n\r\n// To get page scroll percentage.\r\nconst GetScrollPercent = () => {\r\n\r\n    const h = document.documentElement,\r\n        b = document.body,\r\n        st = 'scrollTop',\r\n        sh = 'scrollHeight';\r\n\r\n    return Math.round(\r\n        ((h[st] || b[st]) / ((h[sh] || b[sh]) - h.clientHeight) * 100)\r\n    );\r\n\r\n};\r\n\r\n\r\nsetInterval(() => {\r\n\r\n    let current_scroll = GetScrollPercent();\r\n\r\n    if (PAGE_SCROLL < current_scroll) {\r\n        PAGE_SCROLL = current_scroll;\r\n    };\r\n\r\n}, 500);\r\n\r\n\r\nexport {\r\n    GetCurrentSession,\r\n    GetUTMParams,\r\n    PAGE_SCROLL,\r\n};","import { GetCurrentSession, PAGE_SCROLL, GetUTMParams } from './util';\r\nimport { payload } from './types';\r\nimport { Config } from './config';\r\nimport { GetTimePassed } from './time_counter';\r\n\r\nconst PreparePayload = (event: string): payload => {\r\n\r\n    // Getting UTM Params.\r\n    const utm_params = GetUTMParams();\r\n\r\n    // Payload data object.\r\n    const payload_data: payload = {\r\n\r\n        event,\r\n        session_id: GetCurrentSession(),\r\n        domain: window.location.hostname,\r\n        page_route: location.pathname,\r\n        duration: 0,\r\n\r\n        scrolled_percentage: PAGE_SCROLL,\r\n        referrer: document.referrer,\r\n\r\n        utm_source: utm_params.utm_source,\r\n        utm_medium: utm_params.utm_medium,\r\n        utm_campaign: utm_params.utm_campaign,\r\n\r\n        device_height: window.outerHeight,\r\n        device_width: window.outerWidth,\r\n\r\n    };\r\n\r\n    // Returning generated payload_data.\r\n    return payload_data;\r\n\r\n};\r\n\r\nconst SendEvent = (event: string) => {\r\n\r\n    // Getting data.\r\n    const time_passed = GetTimePassed();\r\n    const payload_data = PreparePayload(event);\r\n    console.log(payload_data);\r\n    \r\n\r\n    // Adding data to form.\r\n    const payload = new FormData();\r\n    payload.append('data', JSON.stringify(payload_data));\r\n\r\n    // Sending Data.\r\n    if (time_passed > Config.idle_time) {\r\n        navigator.sendBeacon(Config.analytics_endpoint, payload);\r\n    };\r\n\r\n\r\n};\r\n\r\nexport {\r\n    SendEvent,\r\n};","import { StartTimer } from \"./time_counter\";\r\nimport { SendEvent } from \"./events\";\r\n\r\n// InitializeAnalytics starts analytics and attaches event listeners\r\n// this is so you can start it after taking concent from user if you with to\r\n// or are required by law to do so.\r\nconst InitializeAnalytics = () => {\r\n\r\n    StartTimer();\r\n\r\n    window.addEventListener(\"unload\", () => {\r\n        SendEvent('page_view');\r\n    });\r\n\r\n};\r\n\r\nInitializeAnalytics();\r\n\r\nexport {\r\n    InitializeAnalytics,\r\n    SendEvent,\r\n};"]}